{"version":3,"sources":["../../server/controllers/controllerFunction.js"],"names":["errorStatus","statusCode","errorMessage","res","status","json","message","error","getAll","element","req","length","result","add","model","i","id","body","push","remove","parseInt","params","splice","getById","date","getByGroup","category"],"mappings":"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","file":"controllerFunction.js","sourcesContent":["const errorStatus = (statusCode, errorMessage, res) => {\r\n  res.status(statusCode).json({ message: errorMessage, error: true });\r\n};\r\n\r\nconst getAll = (element, req, res) => {\r\n  if (element.length > 0) {\r\n    return res.json({\r\n      result: element,\r\n      error: false\r\n    });\r\n  }\r\n  return errorStatus(400, 'not found, it is empty', res);\r\n};\r\n\r\nconst add = (model, req, res) => {\r\n  for (let i = 0; i < model.length; i += 1) {\r\n    if (model[i].id === req.body.id) {\r\n      return errorStatus(400, 'id is already existing', res);\r\n    } else if (!req.body.id) {\r\n      return errorStatus(400, 'id is required', res);\r\n    }\r\n  }\r\n  model.push(req.body);\r\n  return res.json({\r\n    model,\r\n    message: 'Success',\r\n    error: false\r\n  });\r\n};\r\n\r\nconst remove = (element, req, res) => {\r\n  for (let i = 0; i < element.length; i += 1) {\r\n    if (element[i].id === parseInt(req.params.id, 10)) {\r\n      element.splice(i, 1);\r\n      return res.status(200).json({\r\n        message: 'Success',\r\n        error: false\r\n      });\r\n    }\r\n  }\r\n  return res.status(404).json({\r\n    message: 'not found',\r\n    error: true\r\n  });\r\n};\r\n\r\nconst getById = (element, req, res) => {\r\n  for (let i = 0; i < element.length; i += 1) {\r\n    if (\r\n      element[i].id === parseInt(req.params.id, 10) ||\r\n      element[i].date === req.params.date\r\n    ) {\r\n      return res.status(200).json({\r\n        result: element[i],\r\n        message: 'Success',\r\n        error: false\r\n      });\r\n    }\r\n  }\r\n  return res.status(404).json({\r\n    message: 'not found',\r\n    error: true\r\n  });\r\n};\r\n\r\nconst getByGroup = (element, req, res) => {\r\n  const result = [];\r\n  for (let i = 0; i < element.length; i += 1) {\r\n    if (element[i].category === req.params.category) {\r\n      result.push(element[i]);\r\n    }\r\n  }\r\n  if (result.length > 1) {\r\n    return res.status(200).json({\r\n      result,\r\n      message: 'Success',\r\n      error: false\r\n    });\r\n  }\r\n  return res.status(404).json({\r\n    message: 'not found',\r\n    error: true\r\n  });\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  remove,\r\n  getById,\r\n  getByGroup,\r\n  add\r\n};\r\n"]}