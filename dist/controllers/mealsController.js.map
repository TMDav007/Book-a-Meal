{"version":3,"sources":["../../server/controllers/mealsController.js"],"names":["mealController","req","res","getAll","meals","i","length","body","id","json","message","error","push","j","parseInt","food","quantity","image","amount","category","status","remove","getByGroup"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA;;;IAGMA,c;;;;;;;;AACJ;;;;;;;0BAMkBC,G,EAAKC,G,EAAK;AAC1B,wCAAgBC,MAAhB,CAAuB,kBAAK,CAAL,EAAQC,KAA/B,EAAsCH,GAAtC,EAA2CC,GAA3C;AACD;;;;;AAED;;;;;;;;;;uBAMeD,G,EAAKC,G,EAAK;AACvB,aAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAI,kBAAK,CAAL,EAAQD,KAAR,CAAcE,MAAlC,EAA0CD,KAAK,CAA/C,EAAkD;AAChD,cAAIJ,IAAIM,IAAJ,CAASC,EAAT,KAAgB,kBAAK,CAAL,EAAQJ,KAAR,CAAcC,CAAd,EAAiBG,EAArC,EAAyC;AACvC,mBAAON,IAAIO,IAAJ,CAAS;AACdC,uBAAS,wBADK;AAEdC,qBAAO;AAFO,aAAT,CAAP;AAID,WALD,MAKO,IAAI,CAACV,IAAIM,IAAJ,CAASC,EAAd,EAAkB;AACvB,mBAAON,IAAIO,IAAJ,CAAS;AACdC,uBAAS,gBADK;AAEdC,qBAAO;AAFO,aAAT,CAAP;AAID;AACF;AACD,0BAAK,CAAL,EAAQP,KAAR,CAAcQ,IAAd,CAAmBX,IAAIM,IAAvB;AACA,eAAOL,IAAIO,IAAJ,CAAS;AACdL,iBAAO,kBAAK,CAAL,EAAQA,KADD;AAEdM,mBAAS,SAFK;AAGdC,iBAAO;AAHO,SAAT,CAAP;AAKD;;;;;AAED;;;;;;;;;;0BAMkBV,G,EAAKC,G,EAAK;AAC1B,aAAK,IAAIW,IAAI,CAAb,EAAgBA,IAAI,kBAAK,CAAL,EAAQT,KAAR,CAAcE,MAAlC,EAA0CO,KAAK,CAA/C,EAAkD;AAChD,cAAI,kBAAK,CAAL,EAAQT,KAAR,CAAcS,CAAd,EAAiBL,EAAjB,KAAwBM,SAASb,IAAIM,IAAJ,CAASC,EAAlB,EAAsB,EAAtB,CAA5B,EAAuD;AACrD,8BAAK,CAAL,EAAQJ,KAAR,CAAcS,CAAd,EAAiBE,IAAjB,GAAwBd,IAAIM,IAAJ,CAASQ,IAAjC;AACA,8BAAK,CAAL,EAAQX,KAAR,CAAcS,CAAd,EAAiBG,QAAjB,GAA4Bf,IAAIM,IAAJ,CAASS,QAArC;AACA,8BAAK,CAAL,EAAQZ,KAAR,CAAcS,CAAd,EAAiBI,KAAjB,GAAyBhB,IAAIM,IAAJ,CAASU,KAAlC;AACA,8BAAK,CAAL,EAAQb,KAAR,CAAcS,CAAd,EAAiBK,MAAjB,GAA0BjB,IAAIM,IAAJ,CAASW,MAAnC;AACA,8BAAK,CAAL,EAAQd,KAAR,CAAcS,CAAd,EAAiBM,QAAjB,GAA4BlB,IAAIM,IAAJ,CAASY,QAArC;AACA,mBAAOjB,IAAIO,IAAJ,CAAS;AACdL,qBAAO,kBAAK,CAAL,EAAQA,KAAR,CAAcS,CAAd,CADO;AAEdH,uBAAS,mBAFK;AAGdC,qBAAO;AAHO,aAAT,CAAP;AAKD;AACF;AACD,eAAOT,IAAIkB,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqB;AAC1BC,mBAAS,WADiB;AAE1BC,iBAAO;AAFmB,SAArB,CAAP;AAID;;;;;AAED;;;;;;;;;;0BAMkBV,G,EAAKC,G,EAAK;AAC1B,wCAAgBmB,MAAhB,CAAuB,kBAAK,CAAL,EAAQjB,KAA/B,EAAsCH,GAAtC,EAA2CC,GAA3C;AACD;;;;;AAED;;;;;;;;;;6BAMqBD,G,EAAKC,G,EAAK;AAC7B,wCAAgBoB,UAAhB,CAA2B,kBAAK,CAAL,EAAQlB,KAAnC,EAA0CH,GAA1C,EAA+CC,GAA/C;AACD;;;;;;;;;qBAGYF,c","file":"mealsController.js","sourcesContent":["import menu from './../models/menu';\r\nimport controlFunction from './controllerFunction';\r\n\r\n/**\r\n * it is a class that control all meal api;\r\n */\r\nclass mealController {\r\n  /**\r\n   * it GET all meal\r\n   * @param {string} req\r\n   * @param {string} res\r\n   * @returns {object} all meal\r\n   */\r\n  static getAllMeal(req, res) {\r\n    controlFunction.getAll(menu[0].meals, req, res);\r\n  }\r\n\r\n  /**\r\n   * it ADD a meal\r\n   * @param {string} req\r\n   * @param {string} res\r\n   * @returns {object} add meal\r\n   */\r\n  static addMeal(req, res) {\r\n    for (let i = 0; i < menu[0].meals.length; i += 1) {\r\n      if (req.body.id === menu[0].meals[i].id) {\r\n        return res.json({\r\n          message: 'id is already existing',\r\n          error: true\r\n        });\r\n      } else if (!req.body.id) {\r\n        return res.json({\r\n          message: 'id is required',\r\n          error: true\r\n        });\r\n      }\r\n    }\r\n    menu[0].meals.push(req.body);\r\n    return res.json({\r\n      meals: menu[0].meals,\r\n      message: 'Success',\r\n      error: false\r\n    });\r\n  }\r\n\r\n  /**\r\n   * it PUT(update) a meal\r\n   * @param {string} req\r\n   * @param {string} res\r\n   * @returns {object} PUT(update) a meal\r\n   */\r\n  static updateMeal(req, res) {\r\n    for (let j = 0; j < menu[0].meals.length; j += 1) {\r\n      if (menu[0].meals[j].id === parseInt(req.body.id, 10)) {\r\n        menu[0].meals[j].food = req.body.food;\r\n        menu[0].meals[j].quantity = req.body.quantity;\r\n        menu[0].meals[j].image = req.body.image;\r\n        menu[0].meals[j].amount = req.body.amount;\r\n        menu[0].meals[j].category = req.body.category;\r\n        return res.json({\r\n          meals: menu[0].meals[j],\r\n          message: 'Update Successful',\r\n          error: false\r\n        });\r\n      }\r\n    }\r\n    return res.status(404).json({\r\n      message: 'not found',\r\n      error: true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * it DELETE meal\r\n   * @param {string} req\r\n   * @param {string} res\r\n   * @returns {object} remove an meal\r\n   */\r\n  static removeMeal(req, res) {\r\n    controlFunction.remove(menu[0].meals, req, res);\r\n  }\r\n\r\n  /**\r\n   * it GET meals\r\n   * @param {string} req\r\n   * @param {string} res\r\n   * @returns {object} meals\r\n   */\r\n  static getMealByName(req, res) {\r\n    controlFunction.getByGroup(menu[0].meals, req, res);\r\n  }\r\n}\r\n\r\nexport default mealController;\r\n"]}