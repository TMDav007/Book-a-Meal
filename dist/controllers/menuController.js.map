{"version":3,"sources":["../../server/controllers/menuController.js"],"names":["menuController","req","res","getAll","i","length","body","date","json","message","error","push","menu","getById"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA;;;IAGMA,c;;;;;;;;AACN;;;;;;;;0BAOoBC,G,EAAKC,G,EAAK;AAC1B,wCAAgBC,MAAhB,oBAA6BF,GAA7B,EAAkCC,GAAlC;AACD;;;;;AAED;;;;;;;;;;uBAMeD,G,EAAKC,G,EAAK;AACvB,aAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAI,kBAAKC,MAAzB,EAAiCD,KAAK,CAAtC,EAAyC;AACvC,cAAIH,IAAIK,IAAJ,CAASC,IAAT,KAAkB,kBAAKH,CAAL,EAAQG,IAA9B,EAAoC;AAClC,mBAAOL,IAAIM,IAAJ,CAAS;AACdC,uBAAS,0BADK;AAEdC,qBAAO;AAFO,aAAT,CAAP;AAID,WALD,MAKO,IAAI,CAACT,IAAIK,IAAJ,CAASC,IAAd,EAAoB;AACzB,mBAAOL,IAAIM,IAAJ,CAAS;AACdC,uBAAS,kBADK;AAEdC,qBAAO;AAFO,aAAT,CAAP;AAID;AACF;AACD,0BAAKC,IAAL,CAAUV,IAAIK,IAAd;AACA,eAAOJ,IAAIM,IAAJ,CAAS;AACdI,iCADc;AAEdH,mBAAS,SAFK;AAGdC,iBAAO;AAHO,SAAT,CAAP;AAKD;;;;;AAED;;;;;;;;;;;uBAOeT,G,EAAKC,G,EAAKK,I,EAAM;AAC7B,wCAAgBM,OAAhB,oBAA8BZ,GAA9B,EAAmCC,GAAnC,EAAwCK,IAAxC;AACD;;;;;;;;;qBAGYP,c","file":"menuController.js","sourcesContent":["import menu from './../models/menu';\r\nimport controlFunction from './controllerFunction';\r\n\r\n/**\r\n * it is a class that control all menu api;\r\n */\r\nclass menuController {\r\n/**\r\n   * it GET all menu\r\n   * @param {string} req\r\n   * @param {string} res\r\n   * @param {string} date\r\n   * @returns {object} all menu\r\n   */\r\n  static getAllMenu(req, res) {\r\n    controlFunction.getAll(menu, req, res);\r\n  }\r\n\r\n  /**\r\n   * it ADD a menu\r\n   * @param {string} req\r\n   * @param {string} res\r\n   * @returns {object} add menu\r\n   */\r\n  static addMenu(req, res) {\r\n    for (let i = 0; i < menu.length; i += 1) {\r\n      if (req.body.date === menu[i].date) {\r\n        return res.json({\r\n          message: 'date is already existing',\r\n          error: true\r\n        });\r\n      } else if (!req.body.date) {\r\n        return res.json({\r\n          message: 'date is required',\r\n          error: true\r\n        });\r\n      }\r\n    }\r\n    menu.push(req.body);\r\n    return res.json({\r\n      menu,\r\n      message: 'Success',\r\n      error: false\r\n    });\r\n  }\r\n\r\n  /**\r\n   * it GET a menu\r\n   * @param {string} req\r\n   * @param {string} res\r\n   * @param {string} date\r\n   * @returns {object} a menu\r\n   */\r\n  static getMenu(req, res, date) {\r\n    controlFunction.getById(menu, req, res, date);\r\n  }\r\n}\r\n\r\nexport default menuController;\r\n"]}