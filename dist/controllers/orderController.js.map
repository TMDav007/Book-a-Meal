{"version":3,"sources":["../../server/controllers/orderController.js"],"names":["orderController","req","res","getAll","add","j","length","id","parseInt","body","user","qty","food","amount","json","order","message","error","status"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA;;;IAGMA,e;;;;;;;;AACJ;;;;;;;2BAMmBC,G,EAAKC,G,EAAK;AAC3B,wCAAgBC,MAAhB,qBAA8BF,GAA9B,EAAmCC,GAAnC;AACD;;;;;AAED;;;;;;;;;;wBAMgBD,G,EAAKC,G,EAAK;AACxB,wCAAgBE,GAAhB,qBAA2BH,GAA3B,EAAgCC,GAAhC;AACD;;;;;AAED;;;;;;;;;;2BAMmBD,G,EAAKC,G,EAAK;AAC3B,aAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAI,mBAAMC,MAA1B,EAAkCD,KAAK,CAAvC,EAA0C;AACxC,cAAI,mBAAMA,CAAN,EAASE,EAAT,KAAgBC,SAASP,IAAIQ,IAAJ,CAASF,EAAlB,EAAsB,EAAtB,CAApB,EAA+C;AAC7C,+BAAMF,CAAN,EAASK,IAAT,GAAgBT,IAAIQ,IAAJ,CAASC,IAAzB;AACA,+BAAML,CAAN,EAASM,GAAT,GAAeV,IAAIQ,IAAJ,CAASE,GAAxB;AACA,+BAAMN,CAAN,EAASO,IAAT,GAAgBX,IAAIQ,IAAJ,CAASG,IAAzB;AACA,+BAAMP,CAAN,EAASQ,MAAT,GAAkBZ,IAAIQ,IAAJ,CAASI,MAA3B;AACA,mBAAOX,IAAIY,IAAJ,CAAS;AACdC,qBAAO,mBAAMV,CAAN,CADO;AAEdW,uBAAS,mBAFK;AAGdC,qBAAO;AAHO,aAAT,CAAP;AAKD;AACF;AACD,eAAOf,IAAIgB,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AAC1BE,mBAAS,WADiB;AAE1BC,iBAAO;AAFmB,SAArB,CAAP;AAID;;;;;;;;;qBAGYjB,e","file":"orderController.js","sourcesContent":["import order from './../models/order';\r\nimport controlFunction from './controllerFunction';\r\n\r\n/**\r\n * it is a class that control all order api;\r\n */\r\nclass orderController {\r\n  /**\r\n   * it GET all order\r\n   * @param {string} req\r\n   * @param {string} res\r\n   * @returns {object} all order\r\n   */\r\n  static getAllOrder(req, res) {\r\n    controlFunction.getAll(order, req, res);\r\n  }\r\n\r\n  /**\r\n   * it ADD an order\r\n   * @param {string} req\r\n   * @param {string} res\r\n   * @returns {object} add order\r\n   */\r\n  static addOrder(req, res) {\r\n    controlFunction.add(order, req, res);\r\n  }\r\n\r\n  /**\r\n   * it PUT(update) an order\r\n   * @param {string} req\r\n   * @param {string} res\r\n   * @returns {object} PUT(update) an order\r\n   */\r\n  static updateorder(req, res) {\r\n    for (let j = 0; j < order.length; j += 1) {\r\n      if (order[j].id === parseInt(req.body.id, 10)) {\r\n        order[j].user = req.body.user;\r\n        order[j].qty = req.body.qty;\r\n        order[j].food = req.body.food;\r\n        order[j].amount = req.body.amount;\r\n        return res.json({\r\n          order: order[j],\r\n          message: 'Update Successful',\r\n          error: false\r\n        });\r\n      }\r\n    }\r\n    return res.status(404).json({\r\n      message: 'not found',\r\n      error: true\r\n    });\r\n  }\r\n}\r\n\r\nexport default orderController;\r\n"]}