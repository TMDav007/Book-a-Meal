{"version":3,"sources":["../../server/test/index.js"],"names":["should","use","meal","id","food","quantity","image","amount","category","menu","date","meals","order","user","qty","describe","it","done","request","get","end","err","res","have","status","body","property","result","be","a","error","eql","post","field","then","message","send","put"],"mappings":"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","file":"index.js","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from './../server';\r\n\r\n/* eslint-disable no-unused-vars */\r\nconst should = chai.should();\r\n\r\nchai.use(chaiHttp);\r\n\r\n// Global\r\nlet meal = {\r\n  id: 10,\r\n  food: 'Jollof-rice',\r\n  quantity: 1,\r\n  image: 'img.png',\r\n  amount: '5000',\r\n  category: 'local-dish'\r\n};\r\n\r\nlet menu = [\r\n  {\r\n    id: 2,\r\n    date: '17-09-2018',\r\n    meals: [\r\n      {\r\n        id: 1,\r\n        food: 'Jollof-rice',\r\n        quantity: 1,\r\n        image: 'img.png',\r\n        amount: '5000',\r\n        category: 'local-dish'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nlet order = {\r\n  id: 6,\r\n  user: 'Ade',\r\n  qty: 1,\r\n  food: 'Amala',\r\n  amount: 12000\r\n};\r\n\r\n\r\n// Test for /Get meal\r\ndescribe('/GET meal', () => {\r\n  it('it should GET all the meal', (done) => {\r\n    chai.request(app)\r\n      .get('/api/v1/meals')\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.have.property('result');\r\n        res.body.result.should.be.a('array');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(false);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n// POST meal\r\ndescribe('/POST a meal', () => {\r\n  // Test for post with an existing Id\r\n  it('it should not POST a meal with an existing id field', () => {\r\n    chai.request(app)\r\n      .post('/api/v1/meals')\r\n      .field('id', meal.id)\r\n      .field('food', meal.food)\r\n      .field('quantity', meal.quantity)\r\n      .field('image', meal.amount)\r\n      .field('category', meal.category)\r\n      .then((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('id is already existing');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(true);\r\n      });\r\n  });\r\n\r\n  // Test for post with no Id\r\n  it('it should not POST a meal without an id field', (done) => {\r\n    meal = {\r\n      food: 'Jollof-rice',\r\n      quantity: 1,\r\n      image: 'img.png',\r\n      amount: '5000',\r\n      category: 'local-dish'\r\n    };\r\n    chai.request(app)\r\n      .post('/api/v1/meals')\r\n      .send(meal)\r\n      .end((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('id is required');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(true);\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test for post with to add a new meal.\r\n  it('it should Add(post) a new meal', () => {\r\n    chai.request(app)\r\n      .post('/api/v1/meals')\r\n      .send(meal)\r\n      .then((res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('Success');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(false);\r\n      });\r\n  });\r\n});\r\n\r\n// PUT(Update) a meal\r\ndescribe('/Update a meal', () => {\r\n  // PUT a meal\r\n  it('it should update the meal', () => {\r\n    const id = 1;\r\n    chai.request(app)\r\n      .put(`/api/v1/meals/${meal.id = 1}`)\r\n      .field('food', meal.food = 'amala')\r\n      .then((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('Update Successful');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(false);\r\n      });\r\n  });\r\n\r\n  // PUT a meal\r\n  it('it should not update', (done) => {\r\n    const id = 20;\r\n    chai.request(app)\r\n      .put(`/api/v1/meals/${id}`)\r\n      .end((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('not found');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(true);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n// get a meal\r\ndescribe('/get a meal', () => {\r\n  it('it should get a meal', () => {\r\n    chai.request(app)\r\n      .get(`/api/v1/meals/${meal.category}`)\r\n      .then((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('Success');\r\n        res.body.should.have.property('result');\r\n      });\r\n  });\r\n\r\n  it('it should not get a meal', () => {\r\n    chai.request(app)\r\n      .get(`/api/v1/meals/${20}`)\r\n      .then((err, res) => {\r\n        res.should.have.status(404);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql('not found');\r\n      });\r\n  });\r\n});\r\n\r\n// Delete a meal\r\ndescribe('/Delete a meal', () => {\r\n  // DELETE a meal\r\n  it('it should delete a meal', () => {\r\n    chai.request(app)\r\n      .delete(`/api/v1/meals/${meal.id}`)\r\n      .then((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('Success');\r\n      });\r\n  });\r\n\r\n  it('it should not delete a meal', () => {\r\n    chai.request(app)\r\n      .delete(`/api/v1/meals/${20}`)\r\n      .then((err, res) => {\r\n        res.should.have.status(404);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql('not found');\r\n      });\r\n  });\r\n});\r\n\r\n// Menu\r\n// POST a menu\r\ndescribe('/POST a menu', () => {\r\n  // Test for post with an existing date\r\n  it('it should not POST a menu with an existing date field', () => {\r\n    chai.request(app)\r\n      .post('/api/v1/menu')\r\n      .field('date', menu.date = '16-09-2018')\r\n      .then((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('date is already existing');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(true);\r\n      });\r\n  });\r\n\r\n  // Test for post with no Id\r\n  it('it should not POST a menu without an date field', (done) => {\r\n    menu = [\r\n      {\r\n        id: 1,\r\n        meals: [\r\n          {\r\n            id: 1,\r\n            food: 'Jollof-rice',\r\n            quantity: 1,\r\n            image: 'img.png',\r\n            amount: '5000',\r\n            category: 'local-dish'\r\n          },\r\n        ]\r\n      }\r\n    ];\r\n    chai.request(app)\r\n      .post('/api/v1/menu')\r\n      .send(menu)\r\n      .end((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('date is required');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(true);\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test for to add a new menu.\r\n  it('it should Add(post) a new meal', () => {\r\n    chai.request(app)\r\n      .post('/api/v1/menu')\r\n      .send(menu)\r\n      .then((res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('Success');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(false);\r\n      });\r\n  });\r\n});\r\n\r\n// get a menu\r\ndescribe('/get a menu', () => {\r\n  it('it should get a menu', () => {\r\n    chai.request(app)\r\n      .get(`/api/v1/menu/${'16-09-2018'}`)\r\n      .then((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('Success');\r\n        res.body.should.have.property('result');\r\n      });\r\n  });\r\n\r\n  it('it should not get a menu', () => {\r\n    chai.request(app)\r\n      .get(`/api/v1/menu/${20}`)\r\n      .then((err, res) => {\r\n        res.should.have.status(404);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql('not found');\r\n      });\r\n  });\r\n});\r\n\r\n// Order\r\ndescribe('/GET orders', () => {\r\n  // test for Get all Orders\r\n  it('it should GET all the orders', (done) => {\r\n    chai.request(app)\r\n      .get('/api/v1/order')\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.have.property('result');\r\n        res.body.result.should.be.a('array');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(false);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n// POST meal\r\ndescribe('/POST a order', () => {\r\n  // Test for post with an existing Id\r\n  it('it should not POST a order with an existing id field', () => {\r\n    chai.request(app)\r\n      .post('/api/v1/order')\r\n      .field('id', order.id)\r\n      .field('user', order.user)\r\n      .then((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('id is already existing');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(true);\r\n      });\r\n  });\r\n\r\n  // Test for post with no Id\r\n  it('it should not POST a meal without an id field', (done) => {\r\n    order = [\r\n      {\r\n        user: 'Ade',\r\n        qty: 1,\r\n        food: 'Amala',\r\n        amount: 12000\r\n      }\r\n    ];\r\n    chai.request(app)\r\n      .post('/api/v1/order')\r\n      .send(order)\r\n      .end((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('id is required');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(true);\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test for post with to add a new order.\r\n  it('it should Add(post) a new meal', () => {\r\n    chai.request(app)\r\n      .post('/api/v1/order')\r\n      .send(order)\r\n      .then((res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('Success');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(false);\r\n      });\r\n  });\r\n});\r\n\r\n// PUT(Update) a order\r\ndescribe('/Update a order', () => {\r\n  // PUT a meal\r\n  it('it should update the order', () => {\r\n    const id = 1;\r\n    chai.request(app)\r\n      .put(`/api/v1/order/${order.id = 1}`)\r\n      .field('food', order.food = 'amala')\r\n      .then((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('Update Successful');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(false);\r\n      });\r\n  });\r\n\r\n  // PUT a order\r\n  it('it should not update', (done) => {\r\n    const id = 20;\r\n    chai.request(app)\r\n      .put(`/api/v1/order/${id}`)\r\n      .end((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('not found');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(true);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n"]}